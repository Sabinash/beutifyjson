{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","value","responseValue","result","isDownload","serviceURL","handleSubmit","bind","minifyData","jsonDownload","event","preventDefault","URL","this","requestOptions","method","headers","body","JSON","stringify","data","fetch","then","response","json","type","setState","e","myJSON","parse","blob","url","window","createObjectURL","a","document","createElement","href","download","click","className","onSubmit","htmlFor","rows","cols","name","id","placeholder","onChange","target","required","onClick","readOnly","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf521383.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '', responseValue: '',result: '',\n      isDownload: '',\n      serviceURL: \"https://us-central1-beautifyjson.cloudfunctions.net/app/\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.minifyData = this.minifyData.bind(this);\n    this.jsonDownload = this.jsonDownload.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const URL = this.state.serviceURL + \"process\";\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ data: this.state.value })\n    };\n    fetch(URL, requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if (data.type) {\n          fetch(data.response, { method: 'GET'})\n            .then(response => response.json())\n            .then(data => {\n              this.setState({ isDownload: true, result: JSON.stringify(data, null, 4) })\n            });\n        } else {\n          this.setState({ responseValue: data, result:data.response,isDownload: data.isDownload})\n        }\n      });\n  }\n\n  minifyData(e) {\n    e.preventDefault();\n    var myJSON = JSON.stringify(JSON.parse(this.state.result));\n    this.setState({result: myJSON })\n  }\n\n  jsonDownload(e) {\n    e.preventDefault();\n    const URL = this.state.serviceURL + \"getDownloadFile\";\n    const requestOptions = {\n      method: 'GET',\n    };\n    fetch(URL, requestOptions)\n      .then(response => {\n        response.blob().then(blob => {\n          let url = window.URL.createObjectURL(blob);\n          let a = document.createElement('a');\n          a.href = url;\n          a.download = 'output.json';\n          a.click();\n        });\n      });\n\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"text-center\">\n          Beautify JSON\n          </h1>\n        <p className=\"text-left\">\n          *. It is a validator and reformatter for JSON, a lightweight data-interchange format.\n          Copy and paste, directly type, or input a URL in the editor above and let it tidy and validate your\n          messy JSON code.\n          </p>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label htmlFor=\"json\">JSON Data/URL</label>\n            <textarea rows=\"10\" cols=\"30\" className=\"form-control\" type=\"file\" name=\"json\" id=\"\"\n              placeholder='{}' value={this.state.value}\n              onChange={event => this.setState({ value: event.target.value })}\n              required></textarea>\n          </div>\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-lg btn-block\" name=\"action\" id=\"myBtn\" type=\"submit\">\n              Process\n                  </button>\n          </div>\n        </form>\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            {this.state.isDownload ?\n              <a className=\"navbar-brand text-success\" href=\"\" onClick={this.minifyData} >Minify</a>\n              :\n              <a className=\"nav-link disabled\" >Minify</a>\n            }\n            {this.state.isDownload ?\n              <a className=\"navbar-brand text-danger\" href=\"\" onClick={this.jsonDownload} >Download</a>\n              :\n              <a className=\"nav-link disabled\" >Download</a>\n            }\n          </nav>\n          <form>\n            <div className=\"form-group\">\n              <label htmlFor=\"json\">Formatted JSON Data</label>\n              <textarea rows=\"10\" cols=\"30\" className=\"form-control\" type=\"file\" name=\"json\" id=\"\"\n                value={this.state.result} placeholder='{}' readOnly required></textarea>\n            </div>\n          </form>\n        </div>\n        <p className=\"text-center text-muted\">Â© Copyright SekharTech 2020 Beautify JSON</p>\n      </div>\n    );\n  }\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}